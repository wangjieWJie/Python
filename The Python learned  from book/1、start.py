print("Hello World")

# 1、 变量：
# 变量的命名和C++相同，但是尽量少使用小写 i 和大写 O ，容易搞混
message = "双引号引起来的字符串"
print(message)


# 2、 字符串
# python中被引号引起来的都叫字符串，不管是单引号还是双引号
# 但是双引号引起来的字符串中可以随便使用单引号，同样，单引号引起来的字符串中可以随便使用双引号

# 使用方法修改字符串
a_str = "a silly boy"
cap_str = a_str.title()
print(cap_str)
# 这个方法使得上面字符串中字母首字母大写
# 从这个例子中可以看出，python的方法和C++的方法使用起来是一样的
# 还有几个小方法
print(cap_str.upper())  # 使字符串中所有字母大写
print(cap_str.lower())  # 使字符串中所有字母小写
# 因为很多时候您不能相信用户输入的大小写，所以大多数时候都把字符串存为小写，再在输出时适当调整输出时的样式

# 合并（拼接）字符串
other_str = "is you"
sentence = a_str + " " + other_str
print(sentence)

# 制表符
# \t  table(制表符)
# \n  换行符

# 删除空格方法
space_str = " start "
space_str.rstrip()
# 添加这个方法你将得到space_str末尾空格被删除的结果
space_str = space_str.rstrip()  # 这样就能把删除空格之后的字符串存回原字符串的地址，从而实现删除末尾空格的功能
# 除此之外：
# 删除字符串开头的空格： .lstrip()
# 同时删除字符串开头和结尾的空格：.strip()


# 3、数字
# 除加、减、乘、除、取模外，python还可以计算乘方： **
print("12的平方：")
print(12**2)
# 运算顺序应该和C++差不多

# 浮点数
# 和其他编程语言一样，小数点位数是不确定的，日后再议
# 但是在python中 8/3 和 8.0/3 的结果是相同的，都是小数点之后14（13）位


# str() 字符串类型转换
# 能将 int型、浮点型、字符串等类型在适当的位置进行适当的转换
# 如：
print("12的三次方等于 " + str(12**3) + " ！ 你猜对了吗")
# 大多数情况下他都会回应你的预期，将变量类型转换为字符串类型，因为python的数字都非常简单

# python 之禅
#  import this
